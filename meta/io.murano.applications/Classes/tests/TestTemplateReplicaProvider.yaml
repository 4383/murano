#  Licensed under the Apache License, Version 2.0 (the "License"); you may
#  not use this file except in compliance with the License. You may obtain
#  a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#  License for the specific language governing permissions and limitations
#  under the License.

Namespaces:
  =: io.murano.applications.tests
  tst: io.murano.test
  apps: io.murano.applications

--- # ------------------------------------------------------------------ # ---

Name: NestedReplicationTarget
Properties:
  name:
    Contract: $.string().notNull()
  qux:
    Contract: $.string()

--- # ------------------------------------------------------------------ # ---

Name: ReplicationTarget

Properties:
  name:
    Contract: $.string().notNull()
  foo:
    Contract: $.int().notNull()
  bar:
    Contract: $.class(NestedReplicationTarget)

--- # ------------------------------------------------------------------ # ---

Name: NonCustomizedTemplateProvider
Extends: apps:TemplateReplicaProvider


Methods:
  .init:
    Body:
      - $this.template:
          ?:
            type: :ReplicationTarget
          foo: 42
          bar:
            ?:
              type: :NestedReplicationTarget
            qux: QUX

--- # ------------------------------------------------------------------ # ---

Name: CustomizedTemplateProvider
Extends: NonCustomizedTemplateProvider

Methods:
  customizeTemplate:
    Arguments:
      - template:
          Contract:
            $.string().notNull(): $
      - index:
           Contract: $.int().notNull()
    Body:
      - $template[name]: format('parent-{0}', $index)
      - $template.bar[name]: format('nested-{0}', $index)
      - Return: $template

--- # ------------------------------------------------------------------ # ---

Name: MplNotationTemplateProvider
Extends: apps:TemplateReplicaProvider
Methods:
  .init:
    Body:
      - $this.template:
          :ReplicationTarget:
            foo: 42
            name: ParentName
            bar:
              :NestedReplicationTarget:
                name: ChildName
                qux: QUX

--- # ------------------------------------------------------------------ # ---

Name: TestTemplateReplicaProvider
Extends: tst:TestFixture

Methods:
  testUnableToCreateFromNonCustomizedTemplate:
    Body:
      - $provider: new(NonCustomizedTemplateProvider)
      - $ex: false
      - Try:
          - $provider.createReplica(1)
        Catch:
          - With: 'murano.dsl.exceptions.ContractViolationException'
            Do:
            - $ex: true
      - $this.assertTrue($ex)

  testCreateFromCustomizedTemplete:
    Body:
      - $provider: new(CustomizedTemplateProvider)
      - $replicas: list(1,2,3).select($provider.createReplica($))
      - $replicas.select($this.assertTrue($ is ReplicationTarget))
      - $replicas.select($this.assertTrue($.bar is NestedReplicationTarget))
      - $replicas.select($this.assertEqual(42, $.foo))
      - $replicas.select($this.assertEqual(QUX, $.bar.qux))
      - $replicas.enumerate(1).select($this.assertEqual('parent-'+str($[0]), $[1].name))
      - $replicas.enumerate(1).select($this.assertEqual('nested-'+str($[0]), $[1].bar.name))

  testCreateFromMplTemplate:
    Body:
      - $provider: new(MplNotationTemplateProvider)
      - $replica: $provider.createReplica(1)
      - $this.assertTrue($replica is ReplicationTarget)
      - $this.assertTrue($replica.bar is NestedReplicationTarget)
      - $this.assertEqual(42, $replica.foo)
      - $this.assertEqual(QUX, $replica.bar.qux)
      - $this.assertEqual(ParentName, $replica.name)
      - $this.assertEqual(ChildName, $replica.bar.name)

  testCreateFromFullJsonTemplate:
    Body:
      - $model:
          apps:TemplateReplicaProvider:
            template:
              ?:
                type: 'io.murano.applications.tests.ReplicationTarget'
                package: 'io.murano.applications'
              foo: 42
              name: ParentName
              bar:
                ?:
                  type: 'io.murano.applications.tests.NestedReplicationTarget'
                  package: 'io.murano.applications'
                name: ChildName
                qux: QUX
      - $provider: new($model)
      - $replica: $provider.createReplica(1)
      - $this.assertTrue($replica is ReplicationTarget)
      - $this.assertTrue($replica.bar is NestedReplicationTarget)
      - $this.assertEqual(42, $replica.foo)
      - $this.assertEqual(QUX, $replica.bar.qux)
      - $this.assertEqual(ParentName, $replica.name)
      - $this.assertEqual(ChildName, $replica.bar.name)
