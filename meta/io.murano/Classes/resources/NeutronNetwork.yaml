Namespaces:
  =: io.murano.resources
  std: io.murano
  sys: io.murano.system

Name: NeutronNetwork

Extends: Network

Properties:
  name:
    Contract: $.string().notNull()

  externalRouterId:
    Contract: $.string()
    Usage: InOut

  autoUplink:
    Contract: $.bool().notNull()
    Default: true

  autogenerateSubnet:
    Contract: $.bool().notNull()
    Default: true

  subnetCidr:
    Contract: $.string()
    Usage: InOut

  dnsNameserver:
    Contract: $.string()
    Usage: InOut

  useDefaultDns:
    Contract: $.bool().notNull()
    Default: true

Methods:
  initialize:
    Body:
      - $.environment: $.find(std:Environment).require()
      - $.netExplorer: new(sys:NetworkExplorer)

  deploy:
    Body:
      - If: not $.getAttr(deployed, false)
        Then:
          - If: $.useDefaultDns and (not bool($.dnsNameserver))
            Then:
              - $.dnsNameserver: $.netExplorer.getDefaultDns()

          - $.createNetwork()
          - If: $.autoUplink and (not bool($.externalRouterId))
            Then:
              - $.externalRouterId: $.netExplorer.getDefaultRouter()
          - If: $.autogenerateSubnet and (not bool($.subnetCidr))
            Then:
              - $.subnetCidr: $.netExplorer.getAvailableCidr($.externalRouterId, $.id())
          - $.createSubnet()
          - If: $.externalRouterId!=null
            Then:
              - $.createRouterInterface()

          - $.environment.stack.push()
          - $.setAttr(networkConfigured, true)

  createNetwork:
    Body:
      - $netResName: $.name + '-net-' + $.id()
      - $template:
          resources:
            $netResName:
              type: 'OS::Neutron::Net'
              properties:
                name: $.name
      - $.environment.stack.updateTemplate($template)

  createSubnet:
    Body:
      - $subnetResName: $.name + '-subnet-' + $.id()
      - $netResName: $.name + '-net-' + $.id()
      - $template:
          resources:
            $subnetResName:
              type: 'OS::Neutron::Subnet'
              properties:
                network_id: { get_resource: $netResName }
                ip_version: 4
                dns_nameservers: [ $.dnsNameserver ]
                cidr: $.subnetCidr
      - $.environment.stack.updateTemplate($template)

  createRouterInterface:
    Body:
      - $subnetResName: $.name + '-subnet-' + $.id()
      - $template:
          resources:
            $.name + '-ri-' + $.id():
              type: 'OS::Neutron::RouterInterface'
              properties:
                router_id: $.externalRouterId
                subnet_id: { get_resource: $subnetResName }
      - $.environment.stack.updateTemplate($template)

  getNetworkReference:
    Body:
      Return: { get_resource:  $.name + '-net-' + $.id()}

  getSubnetReference:
    Body:
      Return: { get_resource:  $.name + '-subnet-' + $.id()}

  getExternalNetId:
    Body:
      Return: $.netExplorer.getExternalNetworkIdForRouter($.externalRouterId)
