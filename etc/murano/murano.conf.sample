[DEFAULT]

#
# Options defined in murano.api.middleware.context
#

# Role used to identify an authenticated user as
# administrator. (string value)
#admin_role=admin


#
# Options defined in murano.common.config
#

# Address to bind the Murano API server to. (string value)
#bind_host=0.0.0.0

# Port the bind the Murano API server to. (integer value)
#bind_port=8082

# Metadata dir (string value)
#metadata_dir=./meta


#
# Options defined in murano.openstack.common.eventlet_backdoor
#

# Enable eventlet backdoor.  Acceptable values are 0, <port>,
# and <start>:<end>, where 0 results in listening on a random
# tcp port number; <port> results in listening on the
# specified port number (and not enabling backdoor if that
# port is in use); and <start>:<end> results in listening on
# the smallest unused port number within the specified range
# of port numbers.  The chosen port is displayed in the
# service's log file. (string value)
#backdoor_port=<None>


#
# Options defined in murano.openstack.common.lockutils
#

# Enables or disables inter-process locks. (boolean value)
#disable_process_locking=false

# Directory to use for lock files. (string value)
#lock_path=<None>


#
# Options defined in murano.openstack.common.log
#

# Print debugging output (set logging level to DEBUG instead
# of default WARNING level). (boolean value)
#debug=false

# Print more verbose output (set logging level to INFO instead
# of default WARNING level). (boolean value)
#verbose=false

# Log output to standard error. (boolean value)
#use_stderr=true

# Format string to use for log messages with context. (string
# value)
#logging_context_format_string=%(asctime)s.%(msecs)03d %(process)d %(levelname)s %(name)s [%(request_id)s %(user_identity)s] %(instance)s%(message)s

# Format string to use for log messages without context.
# (string value)
#logging_default_format_string=%(asctime)s.%(msecs)03d %(process)d %(levelname)s %(name)s [-] %(instance)s%(message)s

# Data to append to log format when level is DEBUG. (string
# value)
#logging_debug_format_suffix=%(funcName)s %(pathname)s:%(lineno)d

# Prefix each line of exception output with this format.
# (string value)
#logging_exception_prefix=%(asctime)s.%(msecs)03d %(process)d TRACE %(name)s %(instance)s

# List of logger=LEVEL pairs. (list value)
#default_log_levels=amqp=WARN,amqplib=WARN,boto=WARN,qpid=WARN,sqlalchemy=WARN,suds=INFO,oslo.messaging=INFO,iso8601=WARN,requests.packages.urllib3.connectionpool=WARN

# Enables or disables publication of error events. (boolean
# value)
#publish_errors=false

# Enables or disables fatal status of deprecations. (boolean
# value)
#fatal_deprecations=false

# The format for an instance that is passed with the log
# message.  (string value)
#instance_format="[instance: %(uuid)s] "

# The format for an instance UUID that is passed with the log
# message.  (string value)
#instance_uuid_format="[instance: %(uuid)s] "

# The name of a logging configuration file. This file is
# appended to any existing logging configuration files. For
# details about logging configuration files, see the Python
# logging module documentation. (string value)
# Deprecated group/name - [DEFAULT]/log_config
#log_config_append=<None>

# DEPRECATED. A logging.Formatter log message format string
# which may use any of the available logging.LogRecord
# attributes. This option is deprecated.  Please use
# logging_context_format_string and
# logging_default_format_string instead. (string value)
#log_format=<None>

# Format string for %%(asctime)s in log records. Default:
# %(default)s . (string value)
#log_date_format=%Y-%m-%d %H:%M:%S

# (Optional) Name of log file to output to. If no default is
# set, logging will go to stdout. (string value)
# Deprecated group/name - [DEFAULT]/logfile
#log_file=<None>

# (Optional) The base directory used for relative --log-file
# paths. (string value)
# Deprecated group/name - [DEFAULT]/logdir
#log_dir=<None>

# Use syslog for logging. Existing syslog format is DEPRECATED
# during I, and will chang in J to honor RFC5424. (boolean
# value)
#use_syslog=false

# (Optional) Enables or disables syslog rfc5424 format for
# logging. If enabled, prefixes the MSG part of the syslog
# message with APP-NAME (RFC5424). The format without the APP-
# NAME is deprecated in I, and will be removed in J. (boolean
# value)
#use_syslog_rfc_format=false

# Syslog facility to receive log lines. (string value)
#syslog_log_facility=LOG_USER


#
# Options defined in murano.openstack.common.policy
#

# The JSON file that defines policies. (string value)
#policy_file=policy.json

# Default rule. Enforced when a requested rule is not found.
# (string value)
#policy_default_rule=default


#
# Options defined in murano.openstack.common.wsgi
#

# Number of backlog requests to configure the socket with
# (integer value)
#backlog=4096

# Sets the value of TCP_KEEPIDLE in seconds for each server
# socket. Not supported on OS X. (integer value)
#tcp_keepidle=600


[database]

#
# Options defined in murano.openstack.common.db.options
#

# The file name to use with SQLite (string value)
#sqlite_db=murano.sqlite

# If True, SQLite uses synchronous mode (boolean value)
#sqlite_synchronous=true

# The backend to use for db (string value)
# Deprecated group/name - [DEFAULT]/db_backend
#backend=sqlalchemy

# The SQLAlchemy connection string used to connect to the
# database (string value)
# Deprecated group/name - [DEFAULT]/sql_connection
# Deprecated group/name - [DATABASE]/sql_connection
# Deprecated group/name - [sql]/connection
#connection=<None>

# The SQL mode to be used for MySQL sessions. This option,
# including the default, overrides any server-set SQL mode. To
# use whatever SQL mode is set by the server configuration,
# set this to no value. Example: mysql_sql_mode= (string
# value)
#mysql_sql_mode=TRADITIONAL

# Timeout before idle sql connections are reaped (integer
# value)
# Deprecated group/name - [DEFAULT]/sql_idle_timeout
# Deprecated group/name - [DATABASE]/sql_idle_timeout
# Deprecated group/name - [sql]/idle_timeout
#idle_timeout=3600

# Minimum number of SQL connections to keep open in a pool
# (integer value)
# Deprecated group/name - [DEFAULT]/sql_min_pool_size
# Deprecated group/name - [DATABASE]/sql_min_pool_size
#min_pool_size=1

# Maximum number of SQL connections to keep open in a pool
# (integer value)
# Deprecated group/name - [DEFAULT]/sql_max_pool_size
# Deprecated group/name - [DATABASE]/sql_max_pool_size
#max_pool_size=<None>

# Maximum db connection retries during startup. (setting -1
# implies an infinite retry count) (integer value)
# Deprecated group/name - [DEFAULT]/sql_max_retries
# Deprecated group/name - [DATABASE]/sql_max_retries
#max_retries=10

# Interval between retries of opening a sql connection
# (integer value)
# Deprecated group/name - [DEFAULT]/sql_retry_interval
# Deprecated group/name - [DATABASE]/reconnect_interval
#retry_interval=10

# If set, use this value for max_overflow with sqlalchemy
# (integer value)
# Deprecated group/name - [DEFAULT]/sql_max_overflow
# Deprecated group/name - [DATABASE]/sqlalchemy_max_overflow
#max_overflow=<None>

# Verbosity of SQL debugging information. 0=None,
# 100=Everything (integer value)
# Deprecated group/name - [DEFAULT]/sql_connection_debug
#connection_debug=0

# Add python stack traces to SQL as comment strings (boolean
# value)
# Deprecated group/name - [DEFAULT]/sql_connection_trace
#connection_trace=false

# If set, use this value for pool_timeout with sqlalchemy
# (integer value)
# Deprecated group/name - [DATABASE]/sqlalchemy_pool_timeout
#pool_timeout=<None>

# Enable the experimental use of database reconnect on
# connection lost (boolean value)
#use_db_reconnect=false

# seconds between db connection retries (integer value)
#db_retry_interval=1

# Whether to increase interval between db connection retries,
# up to db_max_retry_interval (boolean value)
#db_inc_retry_interval=true

# max seconds between db connection retries, if
# db_inc_retry_interval is enabled (integer value)
#db_max_retry_interval=10

# maximum db connection retries before error is raised.
# (setting -1 implies an infinite retry count) (integer value)
#db_max_retries=20


[heat]

#
# Options defined in murano.common.config
#

# This option explicitly allows Murano to perform "insecure"
# SSL connections and transfers with Heat API. (boolean value)
#insecure=false

# (SSL) Tells Murano to use the specified certificate file to
# verify the peer running Heat API. (string value)
#ca_file=<None>

# (SSL) Tells Murano to use the specified client certificate
# file when communicating with Heat. (string value)
#cert_file=<None>

# (SSL/SSH) Private key file name to communicate with Heat
# API. (string value)
#key_file=<None>

# Heat endpoint type. (string value)
#endpoint_type=publicURL


[keystone]

#
# Options defined in murano.common.config
#

# URL to access OpenStack Identity service. (string value)
#auth_url=<None>

# This option explicitly allows Murano to perform "insecure"
# SSL connections and transfers with Keystone API running
# Kyestone API. (boolean value)
#insecure=false

# (SSL) Tells Murano to use the specified certificate file to
# verify the peer when communicating with Keystone. (string
# value)
#ca_file=<None>

# (SSL) Tells Murano to use the specified client certificate
# file when communicating with Keystone. (string value)
#cert_file=<None>

# (SSL/SSH) Private key file name to communicate with Keystone
# API (string value)
#key_file=<None>


[murano]

#
# Options defined in murano.common.config
#

# Optional murano url in format like http://0.0.0.0:8082 used
# by Murano engine (string value)
#url=<None>

# This option explicitly allows Murano to perform "insecure"
# SSL connections and transfers used by Murano engine.
# (boolean value)
#insecure=false

# (SSL) Tells Murano to use the specified client certificate
# file when communicating with Murano API used by Murano
# engine. (string value)
#cacert=<None>

# (SSL) Tells Murano to use the specified client certificate
# file when communicating with Murano used by Murano engine.
# (string value)
#cert_file=<None>

# (SSL/SSH) Private key file name to communicate with Murano
# API used by Murano engine. (string value)
#key_file=<None>

# Murno endpoint type used by Murano engine. (string value)
#endpoint_type=publicURL


[networking]

#
# Options defined in murano.common.config
#

# Maximum number of environments that use a single router per
# tenant (integer value)
#max_environments=20

# Maximum number of VMs per environment (integer value)
#max_hosts=250

# Template IP address for generating environment subnet cidrs
# (string value)
#env_ip_template=10.0.0.0

# Default DNS nameserver to be assigned to created Networks
# (string value)
#default_dns=8.8.8.8


[neutron]

#
# Options defined in murano.common.config
#

# This option explicitly allows Murano to perform "insecure"
# SSL connections and transfers with Neutron API. (boolean
# value)
#insecure=false

# (SSL) Tells Murano to use the specified client certificate
# file when communicating with Neutron. (string value)
#ca_cert=<None>

# Neutron endpoint type. (string value)
#endpoint_type=publicURL


[packages_opts]

#
# Options defined in murano.common.config
#

# Location (directory) for Murano package cache. (string
# value)
#packages_cache=/tmp/murano-packages-cache

# Maximum application package size, Mb (integer value)
#package_size_limit=5

# Default value for package pagination in API. (integer value)
#limit_param_default=20

# Maximum number of packages to be returned in a single
# pagination request (integer value)
#api_limit_max=100


[paste_deploy]

#
# Options defined in murano.common.config
#

# Paste flavor (string value)
#flavor=<None>

# Path to Paste config file (string value)
#config_file=<None>


[rabbitmq]

#
# Options defined in murano.common.config
#

# The RabbitMQ broker address which used for communication
# with Murano guest agents. (string value)
#host=localhost

# The RabbitMQ broker port. (integer value)
#port=5672

# The RabbitMQ login. (string value)
#login=guest

# The RabbitMQ password. (string value)
#password=guest

# The RabbitMQ virtual host. (string value)
#virtual_host=/

# Boolean flag to enable SSL communication through the
# RabbitMQ broker between murano-engine and guest agents.
# (boolean value)
#ssl=false

# SSL cert file (valid only if SSL enabled). (string value)
#ca_certs=


[ssl]

#
# Options defined in murano.openstack.common.sslutils
#

# CA certificate file to use to verify connecting clients.
# (string value)
#ca_file=<None>

# Certificate file to use when starting the server securely.
# (string value)
#cert_file=<None>

# Private key file to use when starting the server securely.
# (string value)
#key_file=<None>


[stats]

#
# Options defined in murano.common.config
#

# Statistics collection interval in minutes.Default value is 5
# minutes. (integer value)
#period=5


